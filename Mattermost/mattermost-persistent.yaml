---
##################
# BEGIN TEMPLATE #
##################
kind: "Template"
apiVersion: "v1"
metadata:
  name: "mattermost"
  annotations:
    description: "Mattermost with a MySQL database running with a Persistent storage"
    tags: "quickstart,mysql,instant-app,kermit"
labels: 
  template: "mattermost"
objects:
###################
# Layer 0: Images #
###################
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: centos
  spec:
    dockerImageRepository: docker.io/centos
  tags:
    - name: "latest"
- kind: ImageStream
  apiVersion: v1
  metadata:
    description: "This is a GO 1.6 builder"
    name: "go-16-centos7"
  spec:
    dockerImageRepository: "goern/go-16-centos7"
  tags:
    - name: "latest"
###################
# Layer 2: Images #
###################
- apiVersion: v1
  kind: "ImageStream"
  metadata:
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: "ImageStream"
  metadata:
    name: ${APPLICATION_NAME}-platform
########################
# Layer 3: Deployments #
########################
########################
####### FrontEnd #######
########################
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      name: "${APPLICATION_NAME}"
  spec:
    selector:
      name: ${APPLICATION_NAME}
    replicas: 1
    template:
      metadata:
        labels:
          name: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8065
          env:
          - name: DRIVER_NAME
            value: mysql
          - name: DATABASE_SERVICE_NAME
            value: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
########################
####### BackEnd ########
########################  
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      name: "${APPLICATION_NAME}"
    name: "${DATABASE_SERVICE_NAME}"
  spec:
    replicas: 1
    selector:
      name: "${DATABASE_SERVICE_NAME}"
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: "${DATABASE_SERVICE_NAME}"
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: mmuser
          - name: MYSQL_PASSWORD
            value: mostest
          - name: MYSQL_DATABASE
            value: mattermost_test
          image: registry.access.redhat.com/rhscl/mysql-56-rhel7:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
        volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: "${DATABASE_SERVICE_NAME}-volume"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
      volumes:
      - name: "${DATABASE_SERVICE_NAME}-volume"
        persistentVolumeClaim:
          claimName: "${DATABASE_SERVICE_NAME}-pvc"
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status: {}
#########################
# Layer 4: Abstractions #
#########################
########################
### Service FrontEnd ###
######################## 
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-service
  spec:
    ports:
    - name: 8065-tcp
      port: 8065
      protocol: TCP
      targetPort: 8065
    selector:
      deploymentconfig: ${APPLICATION_NAME}
########################
### Service BackEnd ####
######################## 
########################
######## Route #########
########################     
- kind: Route
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-route
    labels:
      name: "${APPLICATION_NAME}"
  spec:
    host: ""
    to:
      kind: "Service"
      name: "${APPLICATION_NAME}"
    tls:
      termination: edge
########################
######### PVC #########
########################     
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${DATABASE_SERVICE_NAME}-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
########################
### Layer 1: Builds ####
########################
########################
##### Go Platform  #####
########################
- kind: "BuildConfig"
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-platform"
    annotations:
      description: "Defines how to build the mattermost platform with Go"
  spec:
    completionDeadlineSeconds: 480
    source:
      type: "Git"
      git:
        uri: "https://github.com/mattermost/platform.git"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "goern/go-16-centos7:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "${APPLICATION_NAME}-platform:latest"
    triggers:
      - type: "ImageChange"
      - type: "ConfigChange"
########################
####### FrontEnd #######
########################
- kind: "BuildConfig"
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        uri: https://github.com/goern/mattermost-openshift
        ref: "centos7"
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: docker.io/centos:latest
      type: Docker
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
##############
# Parameters #
##############
parameters:
- name: APPLICATION_NAME
  required: true
  value: mattermost
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mattermost-db
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL User
  from: user[A-Z0-9]{3}
  name: MYSQL_USER
  required: true
  value: mysql
- description: Password for the MySQL user.
  displayName: MySQL Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
  value: mysql
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: mattermost_db
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 512Mi
