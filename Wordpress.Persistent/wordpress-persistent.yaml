---
##################
# BEGIN TEMPLATE #
##################
kind: "Template"
apiVersion: v1
metadata:
  name: wordpress-persistent
  annotations:
    description: "An example WordPress application with a MySQL database and persistent storage."
    tags: "quickstart,php,mysql,instant-app,kermit"
    iconClass: icon-wordpress
labels:
  template: wordpress-persistent
objects:
###################
# Layer 0: Images #
###################
###################
# Layer 2: Images #
###################
- kind: "ImageStream"
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    annotations:
      description: Keeps track of changes in the Application image
    labels:
      name: ${APPLICATION_NAME}	  
########################
# Layer 3: Deployments #
########################
########################
####### FrontEnd #######
########################	    
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    annotations:
      description: "Defines how to deploy the application server"
    labels:
      name: ${APPLICATION_NAME}	
  spec:
    strategy:
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    - type: ConfigChange
    replicas: 1
    selector:
      name: ${APPLICATION_NAME}
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          name: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
          - name: WORDPRESS_DB_HOST
            value: "${DATABASE_SERVICE_NAME}"
          - name: WORDPRESS_DB_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: WORDPRESS_DB_NAME
            value: ${MYSQL_DATABASE}
          - name: WORDPRESS_DB_USER
            value: ${MYSQL_USER}
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - name: "${APPLICATION_NAME}-data"
            mountPath: "/var/www/html"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: "${APPLICATION_NAME}-vol"
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-pvc
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - $${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: $${APPLICATION_NAME}:latest
  status: {}
########################
####### BackEnd ########
######################## 
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      description: Defines how to deploy the database
    labels:
      name: ${APPLICATION_NAME}
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${DATABASE_SERVICE_NAME}"
    template:
      metadata:
        name: "${DATABASE_SERVICE_NAME}"
        labels:
          name: "${DATABASE_SERVICE_NAME}"
      spec:
        containers:
        - name: "${DATABASE_SERVICE_NAME}"
          image: openshift/mysql:latest
          ports:
          - containerPort: 3306
            protocol: TCP
          env:
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
          - name: WORDPRESS_DB_HOST
            value: "${DATABASE_SERVICE_NAME}"
          - name: WORDPRESS_DB_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: WORDPRESS_DB_NAME
            value: ${MYSQL_DATABASE}
          - name: WORDPRESS_DB_USER
            value: ${MYSQL_USER}
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: "${DATABASE_SERVICE_NAME}-vol"
        volumes:
        - name: "${DATABASE_SERVICE_NAME}-vol"
          persistentVolumeClaim:
            claimName: ${DATABASE_SERVICE_NAME}-pvc
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${DATABASE_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${DATABASE_SERVICE_NAME}:latest
          namespace: openshift
  status: {}
#########################
# Layer 4: Abstractions #
#########################
########################
### Service FrontEnd ###
######################## 			
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: "Exposes and load balances the frontend application pods"
    labels:
      name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${APPLICATION_NAME}
  status:
    loadBalancer: {}
########################
### Service BackEnd ####
######################## 
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      description: "Exposes the database server pods"
    labels:
      name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: "${DATABASE_SERVICE_NAME}"
  status:
    loadBalancer: {}
########################
######## Route #########
########################
- kind: Route
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-route"
    labels:
      name: "${APPLICATION_NAME}"
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: "${APPLICATION_NAME}-svc"
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Allow
########################
########## PVC #########
########################
########################
##### PVC FrontEnd #####
########################
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}-pvc
    labels:
      name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${APP_VOLUME_CAPACITY}
########################
##### PVC BackEnd ######
########################
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}-pvc
    labels:
      name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${DB_VOLUME_CAPACITY}
########################
### Layer 1: Builds ####
########################
- kind: "BuildConfig"
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    annotations:
      description: "Defines how to build the PHP frontend of the application"
    labels:
      name: ${APPLICATION_NAME}
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: php:latest
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"
##############
# Parameters #
##############
parameters:
- name: APPLICATION_NAME
  description: "The name assigned to all of the objects defined in this template."
  required: true
  value: wordpress
- name: SOURCE_REPOSITORY_URL
  description: The URL of the repository with your application source code
  value: https://github.com/wordpress/wordpress.git
- name: SOURCE_REPOSITORY_REF
  description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch
- name: CONTEXT_DIR
  description: Set this to the relative path to your project if it is not in the root of your repository
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: DATABASE_SERVICE_NAME
  description: Database service name
  value: mysql
- name: DATABASE_NAME
  description: Database name
  value: wordpress
- name: DATABASE_USER
  description: Database user name
  value: wordpress
- name: DATABASE_PASSWORD
  description: Database user password
  generate: expression
  from: "[a-zA-Z0-9]{16}"
